[package]
edition = "2021"
name = "composable-allocators"
version = "0.2.11"
#rust-version = "nightly"
authors = ["warlock <internalmike@gmail.com>"]
description = "Composable memory allocators for new allocator API."
readme = "README.md"
documentation = "https://docs.rs/composable-allocators/"
keywords = ["allocator", "memory", "composable", "fallback", "never_type"]
categories = ["memory-management", "no-std"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/A1-Triard/composable-allocators"

[workspace]
exclude = [
    "ensure_no_std",
]

[features]
default = ["global", "system"]
global = []
winapi = ["dep:winapi"]
posix = ["dep:libc"]
system = ["dep:winapi", "dep:libc"]
logging = []

[package.metadata.docs.rs]
features = ["logging"]

[target.'cfg(all(not(target_os="dos"), windows))'.dependencies]
winapi = { version = "0.3.9", features = ["heapapi", "minwindef", "ntdef"], optional = true }

[target.'cfg(all(not(target_os="dos"), not(windows)))'.dependencies]
libc = { version = "0.2.126", default-features = false, optional = true }

[badges]
maintenance = { status = "experimental" }

[dependencies]
const-default = "1.0.0"
const-default-derive = "0.2.0"
